{
  "stats": {
    "suites": 2,
    "tests": 5,
    "passes": 5,
    "pending": 0,
    "failures": 0,
    "start": "2020-04-18T13:02:03.154Z",
    "end": "2020-04-18T13:02:04.888Z",
    "duration": 1734,
    "testsRegistered": 5,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "387eaeab-3d40-42c6-91b7-653dc658876f",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "f93b2db2-3014-4fb9-823f-2ebe6ff37a8b",
          "title": "Movies API test",
          "fullFile": "/Users/oleks/masters/web-dev/api-labs/tests/testMoviesApi.js",
          "file": "/tests/testMoviesApi.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook",
              "fullTitle": "Movies API test \"before all\" hook",
              "timedOut": false,
              "duration": 575,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "testUser.username = 'user1';\ntestUser.password = 'test1';\n_userModel2.default.create(testUser).then(function (result) {\n  return done();\n}).catch(function (err) {\n  return done(err);\n});",
              "err": {},
              "uuid": "0ed69ff8-8d2a-4bd5-bd07-c38a42abaec0",
              "parentUUID": "f93b2db2-3014-4fb9-823f-2ebe6ff37a8b",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": "should get a list of Movies",
              "fullTitle": "Movies API test should get a list of Movies",
              "timedOut": false,
              "duration": 571,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var token = null;\n(0, _supertest2.default)(_index.app).post('/api/users').send(testUser).expect(200).then(function (res) {\n  // HTTP status should be 200\n  res.should.have.property('status').equal(200);\n  res.body.should.have.property('success').equal(true);\n  token = res.body.token;\n  (0, _supertest2.default)(_index.app).get('/api/movies').set('Authorization', token).then(function (res) {\n    // HTTP status should be 200\n    res.should.have.property('status').equal(200);\n    done();\n  });\n}).catch(function (err) {\n  return done(err);\n});",
              "err": {},
              "uuid": "96a8a528-5293-40ab-a5e9-df0dc5813fa9",
              "parentUUID": "f93b2db2-3014-4fb9-823f-2ebe6ff37a8b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should prevent access to movies without valid token",
              "fullTitle": "Movies API test should prevent access to movies without valid token",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); });",
              "err": {},
              "uuid": "f7aa59f8-14ca-4b42-ac4f-34614176f303",
              "parentUUID": "f93b2db2-3014-4fb9-823f-2ebe6ff37a8b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "96a8a528-5293-40ab-a5e9-df0dc5813fa9",
            "f7aa59f8-14ca-4b42-ac4f-34614176f303"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 572,
          "root": false,
          "rootEmpty": false,
          "_timeout": 120000
        },
        {
          "uuid": "9dfba2b4-0237-478a-b605-b5226ae07926",
          "title": "Users API test",
          "fullFile": "/Users/oleks/masters/web-dev/api-labs/tests/testUsersApi.js",
          "file": "/tests/testUsersApi.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook",
              "fullTitle": "Users API test \"before all\" hook",
              "timedOut": false,
              "duration": 192,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "testUser.username = 'user2';\ntestUser.password = 'test2';\ninvalidUser.username = 'chancer1';\ninvalidUser.password = 'bad1';\n_userModel2.default.create(testUser).then(function (res) {\n    return done();\n}).catch(function (err) {\n    return done(err);\n});",
              "err": {},
              "uuid": "d767ff0b-1b8b-48ca-bced-71dca2e77bcf",
              "parentUUID": "9dfba2b4-0237-478a-b605-b5226ae07926",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": "should register a user",
              "fullTitle": "Users API test should register a user",
              "timedOut": false,
              "duration": 189,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var newUser = {\n            username: \"new_user_test\",\n            password: \"apassword\"\n        };\n        (0, _supertest2.default)(_index.app).post('/api/users').send(newUser).query({\n            action: 'register'\n        }).expect('Content-type', /json/).expect(201) // This is the HTTP response\n        .then(function (res) {\n            // HTTP status should be 200\n            res.should.have.property('status').equal(201);\n            done();\n        }).catch(function (err) {\n            return done(err);\n        });",
              "err": {},
              "uuid": "6e135155-81ed-43a9-bae7-365f687b2b88",
              "parentUUID": "9dfba2b4-0237-478a-b605-b5226ae07926",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return a user token for a valid user",
              "fullTitle": "Users API test should return a user token for a valid user",
              "timedOut": false,
              "duration": 190,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, _supertest2.default)(_index.app).post('/api/users').send(testUser).expect('Content-type', /json/).expect(200).then(function (res) {\n    res.should.have.property('status').equal(200);\n    res.body.success.should.be.true;\n    res.body.token.should.exist;\n    done();\n}).catch(function (err) {\n    return done(err);\n});",
              "err": {},
              "uuid": "fd874926-827a-4ff5-a40d-134b831e4ddf",
              "parentUUID": "9dfba2b4-0237-478a-b605-b5226ae07926",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should not return a token for an invalid user",
              "fullTitle": "Users API test should not return a token for an invalid user",
              "timedOut": false,
              "duration": 4,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, _supertest2.default)(_index.app).post('/api/users').send(invalidUser).expect('Content-type', /json/).expect(401).then(function (res) {\n    res.should.have.property('status').equal(401);\n    _should2.default.not.exist(res.body.token);\n    done();\n}).catch(function (err) {\n    return done(err);\n});",
              "err": {},
              "uuid": "75e9ba1e-ba65-4dad-a18e-2b6bb393b247",
              "parentUUID": "9dfba2b4-0237-478a-b605-b5226ae07926",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "6e135155-81ed-43a9-bae7-365f687b2b88",
            "fd874926-827a-4ff5-a40d-134b831e4ddf",
            "75e9ba1e-ba65-4dad-a18e-2b6bb393b247"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 383,
          "root": false,
          "rootEmpty": false,
          "_timeout": 120000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 120000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.1.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "6.1.0"
    },
    "marge": {
      "options": null,
      "version": "5.1.0"
    }
  }
}