{
  "stats": {
    "suites": 2,
    "tests": 7,
    "passes": 7,
    "pending": 0,
    "failures": 0,
    "start": "2020-04-19T13:53:12.977Z",
    "end": "2020-04-19T13:53:14.825Z",
    "duration": 1848,
    "testsRegistered": 7,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "97f95d68-66c1-4388-8928-a25d73e657c3",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "d70434b7-6568-4094-835c-3768d22aeaec",
          "title": "Movies API test",
          "fullFile": "/Users/oleks/masters/web-dev/api-labs/tests/testMoviesApi.js",
          "file": "/tests/testMoviesApi.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook",
              "fullTitle": "Movies API test \"before all\" hook",
              "timedOut": false,
              "duration": 561,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "testUser.username = 'user1';\ntestUser.password = 'test1';\n_userModel2.default.create(testUser).then(function (result) {\n  return done();\n}).catch(function (err) {\n  return done(err);\n});",
              "err": {},
              "uuid": "f490b824-c1a8-4f4c-9f7a-3591aeb674e1",
              "parentUUID": "d70434b7-6568-4094-835c-3768d22aeaec",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": "should get a list of Movies",
              "fullTitle": "Movies API test should get a list of Movies",
              "timedOut": false,
              "duration": 490,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var token = null;\n(0, _supertest2.default)(_index.app).post('/api/users').send(testUser).expect(200).then(function (res) {\n  // HTTP status should be 200\n  res.should.have.property('status').equal(200);\n  res.body.should.have.property('success').equal(true);\n  token = res.body.token;\n  (0, _supertest2.default)(_index.app).get('/api/movies').set('Authorization', token).then(function (res) {\n    // HTTP status should be 200\n    res.should.have.property('status').equal(200);\n    done();\n  });\n}).catch(function (err) {\n  return done(err);\n});",
              "err": {},
              "uuid": "2efca8fa-5991-4d79-9b22-0f30291f62e3",
              "parentUUID": "d70434b7-6568-4094-835c-3768d22aeaec",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should prevent access to movies without valid token",
              "fullTitle": "Movies API test should prevent access to movies without valid token",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); });",
              "err": {},
              "uuid": "b2cd417c-c0ba-4e60-9eb9-78380291c7d7",
              "parentUUID": "d70434b7-6568-4094-835c-3768d22aeaec",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "2efca8fa-5991-4d79-9b22-0f30291f62e3",
            "b2cd417c-c0ba-4e60-9eb9-78380291c7d7"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 492,
          "root": false,
          "rootEmpty": false,
          "_timeout": 120000
        },
        {
          "uuid": "fdb72140-16d8-444e-8bbf-89d9404958c9",
          "title": "Users API test",
          "fullFile": "/Users/oleks/masters/web-dev/api-labs/tests/testUsersApi.js",
          "file": "/tests/testUsersApi.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook",
              "fullTitle": "Users API test \"before all\" hook",
              "timedOut": false,
              "duration": 192,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "testUser.username = 'user2';\ntestUser.password = 'test2';\ninvalidUser.username = 'chancer1';\ninvalidUser.password = 'bad1';\n_userModel2.default.create(testUser).then(function (res) {\n    return done();\n}).catch(function (err) {\n    return done(err);\n});",
              "err": {},
              "uuid": "8520c7eb-d494-431a-9829-58769d0aa6f9",
              "parentUUID": "fdb72140-16d8-444e-8bbf-89d9404958c9",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": "should get all users",
              "fullTitle": "Users API test should get all users",
              "timedOut": false,
              "duration": 6,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, _supertest2.default)(_index.app).get('/api/users').expect('Content-type', /json/).expect(200).then(function (res) {\n    res.should.have.property('status').equal(200);\n    res.body.should.be.Array;\n    res.body.should.have.lengthOf(2);\n    res.body[0].username.should.equal('user1');\n    res.body[1].username.should.equal('user2');\n    done();\n}).catch(function (err) {\n    return done(err);\n});",
              "err": {},
              "uuid": "01079cc8-5060-4834-b2d0-efb79e1130f0",
              "parentUUID": "fdb72140-16d8-444e-8bbf-89d9404958c9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should update a user",
              "fullTitle": "Users API test should update a user",
              "timedOut": false,
              "duration": 198,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "testUser.favourites = [\"5e9c45fae29fa52c55ddae8c\"];\n(0, _supertest2.default)(_index.app).put('/api/users/' + testUser.username).send(testUser).expect('Content-type', /json/).expect(200).then(function (res) {\n    res.should.have.property('status').equal(200);\n    res.body.should.have.property('favourites');\n    res.body.favourites.should.have.lengthOf(1);\n    done();\n}).catch(done);",
              "err": {},
              "uuid": "9851aa4d-1c0a-41a2-9cb5-7bd4f5e7b0d0",
              "parentUUID": "fdb72140-16d8-444e-8bbf-89d9404958c9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should register a user",
              "fullTitle": "Users API test should register a user",
              "timedOut": false,
              "duration": 190,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var newUser = {\n            username: \"new_user_test\",\n            password: \"apassword\"\n        };\n        (0, _supertest2.default)(_index.app).post('/api/users').send(newUser).query({\n            action: 'register'\n        }).expect('Content-type', /json/).expect(201) // This is the HTTP response\n        .then(function (res) {\n            // HTTP status should be 200\n            res.should.have.property('status').equal(201);\n            done();\n        }).catch(function (err) {\n            return done(err);\n        });",
              "err": {},
              "uuid": "d5c8ea7c-803f-46a2-af9c-93adcf29fbb7",
              "parentUUID": "fdb72140-16d8-444e-8bbf-89d9404958c9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return a user token for a valid user",
              "fullTitle": "Users API test should return a user token for a valid user",
              "timedOut": false,
              "duration": 193,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, _supertest2.default)(_index.app).post('/api/users').send(testUser).expect('Content-type', /json/).expect(200).then(function (res) {\n    res.should.have.property('status').equal(200);\n    res.body.success.should.be.true;\n    res.body.token.should.exist;\n    done();\n}).catch(function (err) {\n    return done(err);\n});",
              "err": {},
              "uuid": "58e80894-b792-4e31-a101-ec96791f2037",
              "parentUUID": "fdb72140-16d8-444e-8bbf-89d9404958c9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should not return a token for an invalid user",
              "fullTitle": "Users API test should not return a token for an invalid user",
              "timedOut": false,
              "duration": 4,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, _supertest2.default)(_index.app).post('/api/users').send(invalidUser).expect('Content-type', /json/).expect(401).then(function (res) {\n    res.should.have.property('status').equal(401);\n    _should2.default.not.exist(res.body.token);\n    done();\n}).catch(function (err) {\n    return done(err);\n});",
              "err": {},
              "uuid": "c19164f7-04b2-4783-8f88-2bbad0d4790a",
              "parentUUID": "fdb72140-16d8-444e-8bbf-89d9404958c9",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "01079cc8-5060-4834-b2d0-efb79e1130f0",
            "9851aa4d-1c0a-41a2-9cb5-7bd4f5e7b0d0",
            "d5c8ea7c-803f-46a2-af9c-93adcf29fbb7",
            "58e80894-b792-4e31-a101-ec96791f2037",
            "c19164f7-04b2-4783-8f88-2bbad0d4790a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 591,
          "root": false,
          "rootEmpty": false,
          "_timeout": 120000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 120000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.1.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "6.1.0"
    },
    "marge": {
      "options": null,
      "version": "5.1.0"
    }
  }
}